{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","getData","a","axios","get","data","setState","quotations","console","error","getQuote","state","quote","author","previousQuote","bind","getPreviousQuote","this","concat","Math","floor","random","length","filter","item","className","onClick","disabled","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAkEeA,E,kDA7Db,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAURC,QAXkB,sBAWR,4BAAAC,EAAA,+EAEaC,IAAMC,IACvB,yIAHI,OAEAC,EAFA,OAKN,EAAKC,SAAS,CAACC,WAAYF,EAAKA,OAL1B,gDAONG,QAAQC,MAAR,MAPM,QASR,EAAKC,WATG,yDATR,EAAKC,MAAQ,CACXJ,WAAY,GACZK,MAAO,CAAEA,MAAO,GAAIC,OAAQ,IAC5BC,cAAe,IAEjB,EAAKJ,SAAU,EAAKA,SAASK,KAAd,gBACf,EAAKC,iBAAkB,EAAKA,iBAAiBD,KAAtB,gBARP,E,4CAuBlB,WACgC,KAA3BE,KAAKN,MAAMC,MAAMA,OAClBK,KAAKX,SAAS,CAACQ,cAAeG,KAAKN,MAAMG,cAAcI,OAAOD,KAAKN,MAAMC,SAC3EK,KAAKX,SAAS,CAACM,MAAOK,KAAKN,MAAMJ,WAAWY,KAAKC,MAAMD,KAAKE,SAASJ,KAAKN,MAAMJ,WAAWe,a,8BAG5F,WAAmB,IAAD,OACjBL,KAAKX,SAAS,CAACQ,cAAeG,KAAKN,MAAMG,cAAcI,OAAOD,KAAKN,MAAMC,SACzEK,KAAKX,SAAS,CAACM,MAAOK,KAAKN,MAAMG,cAAcG,KAAKN,MAAMG,cAAcQ,OAAO,KAC/EL,KAAKX,SAAS,CAACQ,cAAeG,KAAKN,MAAMG,cAAcS,QAAO,SAAAC,GAAI,OAAIA,IAAS,EAAKb,MAAMG,cAAc,EAAKH,MAAMG,cAAcQ,OAAO,U,+BAG1I,WACEL,KAAKhB,Y,oBAGP,WACE,OACE,sBAAKwB,UAAU,YAAf,UACI,qBAAKA,UAAU,oBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,QAAf,SACCR,KAAKN,MAAMC,MAAMA,QAElB,sBAAKa,UAAU,SAAf,cACIR,KAAKN,MAAMC,MAAMC,eAKzB,sBAAKY,UAAU,oBAAf,UACI,wBAAQC,QAAST,KAAKD,iBAAkBW,SAA4C,IAAlCV,KAAKN,MAAMG,cAAcQ,OAA3E,4BACA,wBAAQI,QAAST,KAAKP,SAAtB,2C,GAxDIkB,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6b4c6357.chunk.js","sourcesContent":["import \"./App.css\";\nimport axios from \"axios\";\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      quotations: [],\n      quote: { quote: '', author: \"\" },\n      previousQuote: [],\n    };\n    this.getQuote= this.getQuote.bind(this);\n    this.getPreviousQuote= this.getPreviousQuote.bind(this);\n  }\n\n  getData = async () => {\n    try {\n      const data = await axios.get(\n        \"https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\"\n      );\n      this.setState({quotations: data.data}); \n    } catch (e) {\n      console.error(e);\n    }\n    this.getQuote();\n  };\n\n  getQuote(){\n    if(this.state.quote.quote !== \"\")\n      this.setState({previousQuote: this.state.previousQuote.concat(this.state.quote)});\n    this.setState({quote: this.state.quotations[Math.floor(Math.random()*this.state.quotations.length)]})\n  }\n\n   getPreviousQuote(){\n    this.setState({previousQuote: this.state.previousQuote.concat(this.state.quote)});\n    this.setState({quote: this.state.previousQuote[this.state.previousQuote.length-1]})\n    this.setState({previousQuote: this.state.previousQuote.filter(item => item !== this.state.previousQuote[this.state.previousQuote.length-1])});   \n  }\n\n  componentDidMount(){ \n    this.getData(); \n  }\n\n  render(){\n    return (\n      <div className=\"container\">\n          <div className=\"content-container\">\n            <div className=\"quote-container\">\n              <div className=\"quote\">\n              {this.state.quote.quote}\n              </div>\n              <div className=\"author\">\n                -{this.state.quote.author}\n              </div>\n            </div>\n            \n          </div>\n          <div className=\"buttons-container\">\n              <button onClick={this.getPreviousQuote} disabled={this.state.previousQuote.length===0}>Previous quote</button>\n              <button onClick={this.getQuote}>Generate next quote</button>\n            </div>\n      </div>\n    );\n  }\n};\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}